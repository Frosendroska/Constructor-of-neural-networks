version: 2.1

orbs:
  node: circleci/node@5.0.0
  envsubst: sawadashota/envsubst@1.1.0
  docker: circleci/docker@2.0.3
  codecov: codecov/codecov@3.2.2

jobs:
  build:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "--add-opens=java.prefs/java.util.prefs=ALL-UNNAMED -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true -Dorg.gradle.project.isCi=true"
    docker:
      - image: cimg/openjdk:17.0.1
    resource_class: medium
    steps:
      - checkout
      - node/install:
          node-version: "17.6.0"
      - restore_cache:
          key: gradle-wrapper-v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: build-gradle-cache-v1-{{ checksum "build.gradle" }}
      - run:
          name: Build
          command: ./gradlew build -x test -x check
      - save_cache:
          key: gradle-wrapper-v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/wrapper
      - save_cache:
          key: build-gradle-cache-v1-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - .gradle/init.gradle
  test:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "--add-opens=java.prefs/java.util.prefs=ALL-UNNAMED -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true -Dorg.gradle.project.isCi=true"
    docker:
      - image: cimg/openjdk:17.0.1
        environment:
          ENV: CIRCLE
          DATABASE_URL: postgresql://circleci@localhost/circle_test
      - image: cimg/postgres:14.0
        environment:
          PGHOST: localhost
          PGUSER: circleci
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_HOST_AUTH_METHOD: trust
    resource_class: medium
    steps:
      - attach_workspace:
          at: /home/circleci
      - restore_cache:
          key: gradle-wrapper-v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: test-gradle-cache-v1-{{ checksum "build.gradle" }}
      - node/install:
          node-version: "17.6.0"
      - run:
          name: Wait for db to run
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run tests
          command: ./gradlew test -x check
      - save_cache:
          key: test-gradle-cache-v1-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches
      - codecov/upload

  check:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "--add-opens=java.prefs/java.util.prefs=ALL-UNNAMED -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true -Dorg.gradle.project.isCi=true"
    docker:
      - image: cimg/openjdk:17.0.1
    resource_class: medium
    steps:
      - attach_workspace:
          at: /home/circleci
      - restore_cache:
          key: gradle-wrapper-v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: check-gradle-cache-v1-{{ checksum "build.gradle" }}
      - node/install:
          node-version: "17.6.0"
      - run:
          name: Run style validator
          command: ./gradlew check -x test
      - save_cache:
          key: check-gradle-cache-v1-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches

  docker-compose:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "--add-opens=java.prefs/java.util.prefs=ALL-UNNAMED -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true -Dorg.gradle.project.isCi=true"
      GRPC_SERVER_PORT: 9090
      GRPC_PROXY_PORT: 8080
      ENVOY_ADMIN_PORT: 9091
      ENVOY_PROXY_ENDPOINT_ADDRESS: 0.0.0.0
      ENVOY_DOCKER_NETWORK_MODE: host
    machine:
      image: ubuntu-2004:202111-02
    resource_class: medium
    steps:
      - checkout
      - restore_cache:
          key: gradle-wrapper-v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: docker-compose-gradle-cache-v1-{{ checksum "build.gradle" }}
      - envsubst/install
      - docker/install-docker-compose:
          version: v2.4.1
      - run:
          command: ./gradlew dockerComposeUp
          no_output_timeout: 10m
      - run: ./gradlew dockerComposeDown
      - save_cache:
          key: docker-compose-gradle-cache-v1-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches

workflows:
  workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - check:
          requires:
            - build
      - docker-compose
